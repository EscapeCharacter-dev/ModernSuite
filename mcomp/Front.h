#ifndef MCOMP_FRONT_H
#define MCOMP_FRONT_H

typedef signed char			int8_t;
typedef unsigned char		uint8_t;
typedef signed short		int16_t;
typedef unsigned short		uint16_t;
typedef signed int			int32_t;
typedef unsigned int		uint32_t;
typedef signed long			int_least32_t;
typedef unsigned long		uint_least32_t;
typedef signed long long	int64_t;
typedef unsigned long long	uint64_t;
typedef float				f32_t;
typedef double				f64_t;

typedef enum
{
	MCOMP_TOK_NULL,
	MCOMP_TOK_EOF,
	MCOMP_TOK_BAD,

	MCOMP_TOK_LINT,
	MCOMP_TOK_LCHAR,
	MCOMP_TOK_LSTR,

	MCOMP_TOK_PLUS,
	MCOMP_TOK_MINUS,
	MCOMP_TOK_STAR,
	MCOMP_TOK_SLASH,
	MCOMP_TOK_PERCENT,

	MCOMP_TOK_PLUSPLUS,
	MCOMP_TOK_MINUSMINUS,
	MCOMP_TOK_BANG,
	MCOMP_TOK_TILDA,

	MCOMP_TOK_DEQUAL,
	MCOMP_TOK_BANGEQUAL,
	MCOMP_TOK_GREATER,
	MCOMP_TOK_LOWER,
	MCOMP_TOK_GREATEREQUAL,
	MCOMP_TOK_LOWEREQUAL,
	MCOMP_TOK_AMPERSANDS,
	MCOMP_TOK_PIPES,

	MCOMP_TOK_LOWERS,
	MCOMP_TOK_GREATERS,
	MCOMP_TOK_AMPERSAND,
	MCOMP_TOK_HELMET,
	MCOMP_TOK_PIPE,

	MCOMP_TOK_EQUAL,
	MCOMP_TOK_COLON,

	MCOMP_TOK_PLUSEQUAL,
	MCOMP_TOK_MINUSEQUAL,
	MCOMP_TOK_STAREQUAL,
	MCOMP_TOK_SLASHEQUAL,
	MCOMP_TOK_PERCENTEQUAL,
	MCOMP_TOK_LOWERSEQUAL,
	MCOMP_TOK_GREATERSEQUAL,
	MCOMP_TOK_AMPERSANDEQUAL,
	MCOMP_TOK_HELMETEQUAL,
	MCOMP_TOK_PIPEEQUAL,
	MCOMP_TOK_AMPERSANDSEQUAL,
	MCOMP_TOK_PIPESEQUAL,

	MCOMP_TOK_QUESTION,
	MCOMP_TOK_BIGARROW,
	MCOMP_TOK_SMALLARROW,
	MCOMP_TOK_AT,
	MCOMP_TOK_DOLLAR,
	MCOMP_TOK_DOT,
	MCOMP_TOK_COMMA,

	MCOMP_TOK_OPEN_PARENTHESIS,
	MCOMP_TOK_CLOSED_PARENTHESIS,
	MCOMP_TOK_OPEN_SBRACKET,
	MCOMP_TOK_CLOSED_SBRACKET,
	MCOMP_TOK_OPEN_BRACKET,
	MCOMP_TOK_CLOSED_BRACKET,

	MCOMP_TOK_SIZEOF,
	MCOMP_TOK_LENGTHOF,
	MCOMP_TOK_GOTO,
	MCOMP_TOK_LABEL,
	
	MCOMP_TOK_IF,
	MCOMP_TOK_ELSE,
	MCOMP_TOK_SWITCH,
	MCOMP_TOK_FOR,
	MCOMP_TOK_FOREACH,
	MCOMP_TOK_FOREACHM,
	MCOMP_TOK_WHILE,
	MCOMP_TOK_DO,
	MCOMP_TOK_NOOPTZ,
	MCOMP_TOK_FUNCTION,
	MCOMP_TOK_BYTE,
	MCOMP_TOK_SBYTE,
	MCOMP_TOK_SHORT,
	MCOMP_TOK_USHORT,
	MCOMP_TOK_LEAST32,
	MCOMP_TOK_ULEAST32,
	MCOMP_TOK_INT,
	MCOMP_TOK_UINT,
	MCOMP_TOK_LONG,
	MCOMP_TOK_ULONG,
	MCOMP_TOK_OCTA,
	MCOMP_TOK_UOCTA,
	MCOMP_TOK_HALF,
	MCOMP_TOK_SINGLE,
	MCOMP_TOK_DOUBLE,
	MCOMP_TOK_EXTENDED,
	MCOMP_TOK_QUAD,
	MCOMP_TOK_BOOL,
	MCOMP_TOK_UNION,
	MCOMP_TOK_STRUCT,
	MCOMP_TOK_PSTRUCT,
	MCOMP_TOK_VOID,
	MCOMP_TOK_SHORTSTRING,
	MCOMP_TOK_STRING,
	MCOMP_TOK_LONGSTRING,
	MCOMP_TOK_OCTASTRING,
	MCOMP_TOK_CSTRING,
	MCOMP_TOK_USING,
	MCOMP_TOK_VAR,
	MCOMP_TOK_CONST,
	MCOMP_TOK_PUBLIC,
	MCOMP_TOK_CLANG,
	MCOMP_TOK_RETURN,

	MCOMP_TOK_SEMICOLON,
} MLexTokKind;

typedef union
{
	int8_t			int8;
	uint8_t			uint8;
	int16_t			int16;
	uint16_t		uint16;
	int32_t			int32;
	uint32_t		uint32;
	int_least32_t	intl32;
	uint_least32_t	uintl32;
	int64_t			int64;
	uint64_t		uint64;
	const char    	*cstring;
	f32_t			f32;
	f64_t			f64;
} MFrontValue;

typedef struct
{
	MFrontValue	Value;
	MLexTokKind Kind;
} MLexTok;

MLexTok MLexNextToken(void);
void MLexClose(void);
void MLexOpen(const char *filepath);

#endif